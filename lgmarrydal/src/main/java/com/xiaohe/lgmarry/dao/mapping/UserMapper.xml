<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohe.lgmarry.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.xiaohe.lgmarry.dao.model.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="common_where_clause">
        <where>
            <foreach collection="crudCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="update_by_common_where_clause">
        <where>
            <foreach collection="criteria.crudCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id, username, password, state, creation_date
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByUserCriteria" resultMap="BaseResultMap" parameterType="com.xiaohe.lgmarry.dao.criteria.UserCriteria">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="common_where_clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <!-- select user by username-->
    <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username};
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByUserCriteria" parameterType="com.xiaohe.lgmarry.dao.criteria.UserCriteria">
        delete from user
        <if test="_parameter != null">
            <include refid="common_where_clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.xiaohe.lgmarry.dao.model.User">
        insert into user (id, username, password,
          state, creation_date)
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
          #{state,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.xiaohe.lgmarry.dao.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="creationDate != null">
                creation_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="creationDate != null">
                #{creationDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.xiaohe.lgmarry.dao.criteria.UserCriteria" resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="common_where_clause" />
        </if>
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="com.xiaohe.lgmarry.dao.model.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="creationDate != null">
                creation_date = #{creationDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaohe.lgmarry.dao.model.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
          password = #{password,jdbcType=VARCHAR},
          creation_date = #{creationDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByUserCriteriaSelective" parameterType="map">
        update user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=CHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="update_by_common_where_clause" />
        </if>
    </update>
    <update id="updateByUserCriteria" parameterType="map">
        update user
        set id = #{record.id,jdbcType=BIGINT},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=CHAR},
        state = #{record.state,jdbcType=VARCHAR},
        create_time = #{record.creationDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="update_by_common_where_clause" />
        </if>
    </update>

    <!-- 用户登录验证查询 -->
    <select id="authentication" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List" />
        from user
        where username = #{record.username,jdbcType=VARCHAR} and password = #{record.password,jdbcType=CHAR}
    </select>

    <!-- 分页条件查询 -->
    <select id="selectByUserCriteriaAndPage" resultMap="BaseResultMap" parameterType="com.xiaohe.lgmarry.dao.criteria.UserCriteria">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null">
            <include refid="common_where_clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
</mapper>